{
      "dataset_reader": {
            "class_name": "dstc2_reader",
            "data_path": "{DATA_PATH}"
      },
      "dataset_iterator": {
            "class_name": "dstc2_ner_iterator",
            "slot_values_path": "{SLOT_VALS_PATH}"
      },
      "chainer": {
            "in": [
                  "x"
            ],
            "in_y": [
                  "y"
            ],
            "pipe": [
                  {
                        "in": [
                              "x"
                        ],
                        "class_name": "lazy_tokenizer",
                        "out": [
                              "x_tokens"
                        ]
                  },
                  {
                        "in": [
                              "x_tokens"
                        ],
                        "class_name": "str_lower",
                        "out": [
                              "x_lower"
                        ]
                  },
                  {
                        "in": [
                              "x_lower"
                        ],
                        "id": "word_vocab",
                        "class_name": "simple_vocab",
                        "pad_with_zeros": true,
                        "fit_on": [
                              "x_lower"
                        ],
                        "save_path": "{MODEL_PATH}/word.dict",
                        "load_path": "{MODEL_PATH}/word.dict",
                        "out": [
                              "x_tok_ind"
                        ]
                  },
                  {
                        "class_name": "random_emb_mat",
                        "id": "embeddings",
                        "vocab_len": "#word_vocab.len",
                        "emb_dim": 128
                  },
                  {
                        "in": [
                              "y"
                        ],
                        "id": "tag_vocab",
                        "class_name": "simple_vocab",
                        "pad_with_zeros": true,
                        "fit_on": [
                              "y"
                        ],
                        "save_path": "{MODEL_PATH}/tag.dict",
                        "load_path": "{MODEL_PATH}/tag.dict",
                        "out": [
                              "y_ind"
                        ]
                  },
                  {
                        "in": [
                              "x_tokens"
                        ],
                        "class_name": "mask",
                        "out": [
                              "mask"
                        ]
                  },
                  {
                        "in": [
                              "x_tok_ind",
                              "mask"
                        ],
                        "in_y": [
                              "y_ind"
                        ],
                        "out": [
                              "y_predicted"
                        ],
                        "class_name": "ner",
                        "main": true,
                        "token_emb_mat": "#embeddings.emb_mat",
                        "n_hidden_list": [
                              64,
                              64,
                              64
                        ],
                        "net_type": "cnn",
                        "n_tags": "#tag_vocab.len",
                        "save_path": "{MODEL_PATH}/model",
                        "load_path": "{MODEL_PATH}/model",
                        "embeddings_dropout": true,
                        "top_dropout": true,
                        "intra_layer_dropout": false,
                        "use_batch_norm": true,
                        "learning_rate": 0.02,
                        "dropout_keep_prob": 0.5,
                        "momentum": 0.95
                  },
                  {
                        "ref": "tag_vocab",
                        "in": [
                              "y_predicted"
                        ],
                        "out": [
                              "tags"
                        ]
                  }
            ],
            "out": [
                  "x_tokens",
                  "tags"
            ]
      },
      "train": {
            "epochs": 200,
            "batch_size": 32,
            "metrics": [
                  {
                        "name": "ner_f1",
                        "inputs": [
                              "y",
                              "tags"
                        ]
                  },
                  {
                        "name": "per_token_accuracy",
                        "inputs": [
                              "y",
                              "tags"
                        ]
                  }
            ],
            "validation_patience": 25,
            "val_every_n_epochs": 5,
            "log_every_n_batches": 100,
            "show_examples": false,
            "class_name": "nn_trainer",
            "evaluation_targets": [
                  "train",
                  "valid",
                  "test"
            ]
      },
      "metadata": {
            "variables": {
                  "ROOT_PATH": "~/.deeppavlov",
                  "DATA_PATH": "../data/ner/",
                  "SLOT_VALS_PATH": "{DATA_PATH}/dstc_slot_vals.json",
                  "MODELS_PATH": "{ROOT_PATH}/models",
                  "MODEL_PATH": "../task_oriented/entity_extractor/ner/model"
            },
            "requirements": [
                  "{DEEPPAVLOV_PATH}/requirements/tf.txt"
            ],
            "download": [
                  {
                        "url": "http://files.deeppavlov.ai/deeppavlov_data/dstc_slot_vals.tar.gz",
                        "subdir": "{DATA_PATH}"
                  },
                  {
                        "url": "http://files.deeppavlov.ai/deeppavlov_data/slotfill_dstc2.tar.gz",
                        "subdir": "{MODELS_PATH}"
                  }
            ]
      }
}